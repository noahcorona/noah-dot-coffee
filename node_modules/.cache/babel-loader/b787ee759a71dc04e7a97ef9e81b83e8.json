{"ast":null,"code":"var _jsxFileName = \"/Users/noahcorona/Development/web/noah-dot-coffee/src/components/Portfolio/Project.tsx\";\nimport '../../style/ProjectCard.css';\nimport ProjectCard from \"./Cards/ProjectCard\";\nimport Button from \"@mui/material/Button\";\nimport { Chip } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Project = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-left\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: props.project.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: props.project.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chip-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Stack\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 25\n          }, this), Array.from(props.project.stack).map(item => /*#__PURE__*/_jsxDEV(Chip, {\n            label: item,\n            size: \"small\",\n            sx: {\n              color: '#fff'\n            },\n            variant: \"outlined\"\n          }, item, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Keywords\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this), Array.from(props.project.keywords).map(keyword => /*#__PURE__*/_jsxDEV(Chip, {\n            label: keyword,\n            size: \"small\",\n            sx: {\n              color: '#fff'\n            },\n            variant: \"outlined\"\n          }, keyword, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-right\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: props.project.demo_link && /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"web-link\",\n          href: props.project.demo_link,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            fullWidth: true,\n            sx: {\n              padding: '1em',\n              color: '#fff'\n            },\n            children: \"View the live demo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: props.project.github_link && /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"web-link\",\n          href: props.project.github_link,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            fullWidth: true,\n            children: \"View on Github\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProjectCard, {\n        project: props.project,\n        projectType: props.projectType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Project;\nexport default Project;\n\nvar _c;\n\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"names":["ProjectCard","Button","Chip","Project","props","project","title","description","Array","from","stack","map","item","color","keywords","keyword","demo_link","padding","github_link","projectType"],"sources":["/Users/noahcorona/Development/web/noah-dot-coffee/src/components/Portfolio/Project.tsx"],"sourcesContent":["import '../../style/ProjectCard.css'\nimport ProjectCard from \"./Cards/ProjectCard\";\nimport Button from \"@mui/material/Button\";\nimport {Chip} from \"@mui/material\";\n\nconst Project = (props: { project: any; projectType: any; }) => {\n    return (\n        <div className=\"project\">\n            <div className=\"project-left\">\n                <div className=\"summary-container\">\n                    <h3>{props.project.title}</h3>\n                    <h4>{props.project.description}</h4>\n                    <div className=\"chip-container\">\n                        <h4>Stack</h4>\n                        {Array.from(props.project.stack).map((item: any) => (\n                            <Chip key={item}\n                                  label={item}\n                                  size=\"small\"\n                                  sx={{color: '#fff'}}\n                                  variant=\"outlined\" />\n                        ))}\n                    </div>\n                    <div>\n                        <h4>Keywords</h4>\n                        {Array.from(props.project.keywords).map((keyword: any) => (\n                            <Chip key={keyword}\n                                  label={keyword}\n                                  size=\"small\"\n                                  sx={{color: '#fff'}}\n                                  variant=\"outlined\" />\n                        ))}\n                    </div>\n                </div>\n            </div>\n            <div className=\"project-right\">\n                <div>\n                    {props.project.demo_link &&\n                        <a className=\"web-link\"\n                           href={props.project.demo_link}>\n                            <Button fullWidth\n                                    sx={{padding: '1em', color: '#fff'}}>View the live demo</Button>\n                        </a>\n                    }\n                </div>\n                <div>\n                    {props.project.github_link &&\n                        <a className=\"web-link\"\n                           href={props.project.github_link}>\n                            <Button fullWidth>View on Github</Button>\n                        </a>\n                    }\n                </div>\n                <ProjectCard project={props.project}\n                             projectType={props.projectType} />\n            </div>\n        </div>\n    )\n}\n\nexport default Project;\n"],"mappings":";AAAA,OAAO,6BAAP;AACA,OAAOA,WAAP,MAAwB,qBAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAAQC,IAAR,QAAmB,eAAnB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAgD;EAC5D,oBACI;IAAK,SAAS,EAAC,SAAf;IAAA,wBACI;MAAK,SAAS,EAAC,cAAf;MAAA,uBACI;QAAK,SAAS,EAAC,mBAAf;QAAA,wBACI;UAAA,UAAKA,KAAK,CAACC,OAAN,CAAcC;QAAnB;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAA,UAAKF,KAAK,CAACC,OAAN,CAAcE;QAAnB;UAAA;UAAA;UAAA;QAAA,QAFJ,eAGI;UAAK,SAAS,EAAC,gBAAf;UAAA,wBACI;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,EAEKC,KAAK,CAACC,IAAN,CAAWL,KAAK,CAACC,OAAN,CAAcK,KAAzB,EAAgCC,GAAhC,CAAqCC,IAAD,iBACjC,QAAC,IAAD;YACM,KAAK,EAAEA,IADb;YAEM,IAAI,EAAC,OAFX;YAGM,EAAE,EAAE;cAACC,KAAK,EAAE;YAAR,CAHV;YAIM,OAAO,EAAC;UAJd,GAAWD,IAAX;YAAA;YAAA;YAAA;UAAA,QADH,CAFL;QAAA;UAAA;UAAA;UAAA;QAAA,QAHJ,eAaI;UAAA,wBACI;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,EAEKJ,KAAK,CAACC,IAAN,CAAWL,KAAK,CAACC,OAAN,CAAcS,QAAzB,EAAmCH,GAAnC,CAAwCI,OAAD,iBACpC,QAAC,IAAD;YACM,KAAK,EAAEA,OADb;YAEM,IAAI,EAAC,OAFX;YAGM,EAAE,EAAE;cAACF,KAAK,EAAE;YAAR,CAHV;YAIM,OAAO,EAAC;UAJd,GAAWE,OAAX;YAAA;YAAA;YAAA;UAAA,QADH,CAFL;QAAA;UAAA;UAAA;UAAA;QAAA,QAbJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ,eA2BI;MAAK,SAAS,EAAC,eAAf;MAAA,wBACI;QAAA,UACKX,KAAK,CAACC,OAAN,CAAcW,SAAd,iBACG;UAAG,SAAS,EAAC,UAAb;UACG,IAAI,EAAEZ,KAAK,CAACC,OAAN,CAAcW,SADvB;UAAA,uBAEI,QAAC,MAAD;YAAQ,SAAS,MAAjB;YACQ,EAAE,EAAE;cAACC,OAAO,EAAE,KAAV;cAAiBJ,KAAK,EAAE;YAAxB,CADZ;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAFJ;UAAA;UAAA;UAAA;QAAA;MAFR;QAAA;QAAA;QAAA;MAAA,QADJ,eAUI;QAAA,UACKT,KAAK,CAACC,OAAN,CAAca,WAAd,iBACG;UAAG,SAAS,EAAC,UAAb;UACG,IAAI,EAAEd,KAAK,CAACC,OAAN,CAAca,WADvB;UAAA,uBAEI,QAAC,MAAD;YAAQ,SAAS,MAAjB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAFJ;UAAA;UAAA;UAAA;QAAA;MAFR;QAAA;QAAA;QAAA;MAAA,QAVJ,eAkBI,QAAC,WAAD;QAAa,OAAO,EAAEd,KAAK,CAACC,OAA5B;QACa,WAAW,EAAED,KAAK,CAACe;MADhC;QAAA;QAAA;QAAA;MAAA,QAlBJ;IAAA;MAAA;MAAA;MAAA;IAAA,QA3BJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAmDH,CApDD;;KAAMhB,O;AAsDN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}