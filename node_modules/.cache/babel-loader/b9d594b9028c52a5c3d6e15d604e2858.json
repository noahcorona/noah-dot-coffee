{"ast":null,"code":"var _jsxFileName = \"/Users/noahcorona/Development/web/noah-dot-coffee/src/components/portfolio/Project.tsx\";\nimport '../../style/ProjectCard.css';\nimport WebProjectDisplay from \"./WebProjectDisplay\";\nimport MobileProjectDisplay from \"./MobileProjectDisplay\";\nimport EmbeddedProjectDisplay from \"./EmbeddedProjectDisplay\";\nimport MLProjectDisplay from \"./MLProjectDisplay\";\nimport MediaProjectDisplay from \"./MediaProjectDisplay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProjectBody = props => {\n  switch (props.projectType) {\n    case \"web\":\n      return /*#__PURE__*/_jsxDEV(WebProjectDisplay, {\n        project: props.project\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 20\n      }, this);\n      break;\n\n    case \"mobile\":\n      return /*#__PURE__*/_jsxDEV(MobileProjectDisplay, {\n        project: props.project\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 20\n      }, this);\n      break;\n\n    case \"embedded\":\n      return /*#__PURE__*/_jsxDEV(EmbeddedProjectDisplay, {\n        project: props.project\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 20\n      }, this);\n      break;\n\n    case \"ml\":\n      return /*#__PURE__*/_jsxDEV(MLProjectDisplay, {\n        project: props.project\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 20\n      }, this);\n      break;\n\n    case \"media\":\n      return /*#__PURE__*/_jsxDEV(MediaProjectDisplay, {\n        project: props.project\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 20\n      }, this);\n      break;\n\n    default:\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 20\n      }, this);\n  }\n};\n\n_c = ProjectBody;\n\nconst Project = props => {\n  const {\n    project,\n    projectType\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-left\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: props.project.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: props.project.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), Array.from(props.project.stack).map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: item\n        }, item, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }, this)), Array.from(props.project.keywords).map(keyword => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: keyword\n        }, keyword, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-right\",\n      children: /*#__PURE__*/_jsxDEV(ProjectBody, {\n        project: project,\n        projectType: projectType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Project;\nexport default Project;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProjectBody\");\n$RefreshReg$(_c2, \"Project\");","map":{"version":3,"names":["WebProjectDisplay","MobileProjectDisplay","EmbeddedProjectDisplay","MLProjectDisplay","MediaProjectDisplay","ProjectBody","props","projectType","project","Project","title","description","Array","from","stack","map","item","keywords","keyword"],"sources":["/Users/noahcorona/Development/web/noah-dot-coffee/src/components/portfolio/Project.tsx"],"sourcesContent":["import '../../style/ProjectCard.css'\nimport WebProjectDisplay from \"./WebProjectDisplay\";\nimport MobileProjectDisplay from \"./MobileProjectDisplay\";\nimport EmbeddedProjectDisplay from \"./EmbeddedProjectDisplay\";\nimport MLProjectDisplay from \"./MLProjectDisplay\";\nimport MediaProjectDisplay from \"./MediaProjectDisplay\";\n\nconst ProjectBody = (props: { projectType: any; project: any; }) => {\n    switch(props.projectType) {\n        case \"web\":\n            return <WebProjectDisplay project={props.project} />\n            break;\n        case \"mobile\":\n            return <MobileProjectDisplay project={props.project} />\n            break;\n        case \"embedded\":\n            return <EmbeddedProjectDisplay project={props.project} />\n            break;\n        case \"ml\":\n            return <MLProjectDisplay project={props.project} />\n            break;\n        case \"media\":\n            return <MediaProjectDisplay project={props.project} />\n            break;\n        default:\n            return <div />\n    }\n}\n\nconst Project = (props: { project: any; projectType: any; }) => {\n    const {project, projectType} = props;\n\n    return (\n        <div className=\"project\">\n            <div className=\"project-left\">\n                <div className=\"card-container\">\n                    <h3>{props.project.title}</h3>\n                    <h4>{props.project.description}</h4>\n                    {\n                        Array.from(props.project.stack).map((item: any) => (\n                            <div key={item}>\n                                {item}\n                            </div>\n                        ))\n                    }\n                    {\n                        Array.from(props.project.keywords).map((keyword: any) => (\n                            <div key={keyword}>\n                                {keyword}\n                            </div>\n                        ))\n                    }\n                </div>\n            </div>\n            <div className=\"project-right\">\n                <ProjectBody project={project}\n                             projectType={projectType}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default Project;\n"],"mappings":";AAAA,OAAO,6BAAP;AACA,OAAOA,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAgD;EAChE,QAAOA,KAAK,CAACC,WAAb;IACI,KAAK,KAAL;MACI,oBAAO,QAAC,iBAAD;QAAmB,OAAO,EAAED,KAAK,CAACE;MAAlC;QAAA;QAAA;QAAA;MAAA,QAAP;MACA;;IACJ,KAAK,QAAL;MACI,oBAAO,QAAC,oBAAD;QAAsB,OAAO,EAAEF,KAAK,CAACE;MAArC;QAAA;QAAA;QAAA;MAAA,QAAP;MACA;;IACJ,KAAK,UAAL;MACI,oBAAO,QAAC,sBAAD;QAAwB,OAAO,EAAEF,KAAK,CAACE;MAAvC;QAAA;QAAA;QAAA;MAAA,QAAP;MACA;;IACJ,KAAK,IAAL;MACI,oBAAO,QAAC,gBAAD;QAAkB,OAAO,EAAEF,KAAK,CAACE;MAAjC;QAAA;QAAA;QAAA;MAAA,QAAP;MACA;;IACJ,KAAK,OAAL;MACI,oBAAO,QAAC,mBAAD;QAAqB,OAAO,EAAEF,KAAK,CAACE;MAApC;QAAA;QAAA;QAAA;MAAA,QAAP;MACA;;IACJ;MACI,oBAAO;QAAA;QAAA;QAAA;MAAA,QAAP;EAjBR;AAmBH,CApBD;;KAAMH,W;;AAsBN,MAAMI,OAAO,GAAIH,KAAD,IAAgD;EAC5D,MAAM;IAACE,OAAD;IAAUD;EAAV,IAAyBD,KAA/B;EAEA,oBACI;IAAK,SAAS,EAAC,SAAf;IAAA,wBACI;MAAK,SAAS,EAAC,cAAf;MAAA,uBACI;QAAK,SAAS,EAAC,gBAAf;QAAA,wBACI;UAAA,UAAKA,KAAK,CAACE,OAAN,CAAcE;QAAnB;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAA,UAAKJ,KAAK,CAACE,OAAN,CAAcG;QAAnB;UAAA;UAAA;UAAA;QAAA,QAFJ,EAIQC,KAAK,CAACC,IAAN,CAAWP,KAAK,CAACE,OAAN,CAAcM,KAAzB,EAAgCC,GAAhC,CAAqCC,IAAD,iBAChC;UAAA,UACKA;QADL,GAAUA,IAAV;UAAA;UAAA;UAAA;QAAA,QADJ,CAJR,EAWQJ,KAAK,CAACC,IAAN,CAAWP,KAAK,CAACE,OAAN,CAAcS,QAAzB,EAAmCF,GAAnC,CAAwCG,OAAD,iBACnC;UAAA,UACKA;QADL,GAAUA,OAAV;UAAA;UAAA;UAAA;QAAA,QADJ,CAXR;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ,eAqBI;MAAK,SAAS,EAAC,eAAf;MAAA,uBACI,QAAC,WAAD;QAAa,OAAO,EAAEV,OAAtB;QACa,WAAW,EAAED;MAD1B;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QArBJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AA6BH,CAhCD;;MAAME,O;AAkCN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}